import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'package:uuid/uuid.dart';
import '../models/tution_class.dart';
import '../models/payment.dart';
import 'auth_service.dart';

class DataService {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final AuthService _authService = AuthService();
  final Uuid _uuid = const Uuid();

  // üëâ FIX: Box type ‡∂ë‡∂ö TutionClass ‡∑Ä‡∑í‡∂Ø‡∑í‡∂∫‡∂ß ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∂Ω‡∑è
  late Box<TutionClass> _classesBox;

  // --- ‡∂∏‡∑ö ‡∂ß‡∑í‡∂ö ‡∂Ø‡∑ê‡∂±‡∂ß ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ô ‡∂±‡∑ë ---
  static const String paymentsBoxName = 'payments';
  static const String syncQueueBoxName = 'sync_queue';
  late Box<Map> _paymentsBox;
  late Box<Map> _syncQueueBox;
  // ------------------------------------

  Future<void> initializeHive() async {
    // Box ‡∂ë‡∂ö main.dart ‡∑Ä‡∂Ω open ‡∂ö‡∂ª‡∂¥‡∑î ‡∂±‡∑í‡∑É‡∑è, ‡∂∏‡∑ô‡∂≠‡∂±‡∂Ø‡∑í ‡∂í‡∂ö ‡∂Ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±‡∑Ä‡∑è ‡∑Ä‡∑í‡∂≠‡∂ª‡∂∫‡∑í
    _classesBox = Hive.box<TutionClass>('classes');
    _paymentsBox = await Hive.openBox<Map>(paymentsBoxName);
    _syncQueueBox = await Hive.openBox<Map>(syncQueueBoxName);
  }

  Future<bool> hasInternetAccess() async {
    final connectivityResult = await Connectivity().checkConnectivity();
    return connectivityResult != ConnectivityResult.none;
  }

  Future<void> addClass(TutionClass tutionClass) async {
    // üëâ FIX: Code ‡∂ë‡∂ö simple ‡∂ã‡∂±‡∑è. Object ‡∂ë‡∂ö ‡∂ö‡∑ô‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ save ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
    await _classesBox.add(tutionClass);

    // TODO: Firebase sync logic ‡∂ë‡∂ö ‡∂¥‡∑É‡∑ä‡∑É‡∑ô ‡∑Ñ‡∂Ø‡∂∏‡∑î.
    // ‡∂Ø‡∑ê‡∂±‡∂ß local save ‡∑Ä‡∑ô‡∂± ‡∂ë‡∂ö ‡∑Ñ‡∂ª‡∑í‡∂∫‡∂ß‡∂∏ ‡∑Ä‡∑ê‡∂©.
  }

  List<TutionClass> getAllClasses() {
    // üëâ FIX: Code ‡∂ë‡∂ö simple ‡∂ã‡∂±‡∑è. Box ‡∂ë‡∂ö‡∑ö values ‡∂ß‡∑í‡∂ö list ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è.
    return _classesBox.values.toList();
  }

  // =======================================================
  // ‡∂¥‡∑Ñ‡∂Ω ‡∂≠‡∑í‡∂∫‡∑ô‡∂± ‡∂Ö‡∂±‡∑í‡∂≠‡∑ä functions ‡∂Ø‡∑ê‡∂±‡∂ß ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ô ‡∂±‡∑ë.
  // ‡∂Ö‡∂¥‡∑í Firebase sync ‡∂ë‡∂ö ‡∑Ñ‡∂Ø‡∂Ø‡∑ä‡∂Ø‡∑í ‡∂∏‡∑ö ‡∂ß‡∑í‡∂ö‡∂≠‡∑ä update ‡∂ö‡∂ª‡∂∏‡∑î.
  // =======================================================

  Future<void> syncWithFirebase() async { /* ... no change ... */ }
  Future<void> addPayment(Payment payment) async { /* ... no change ... */ }
  List<Payment> getAllPayments() { /* ... no change ... */ return []; }
  Future<void> _syncClasses() async { /* ... no change ... */ }
  Future<void> _syncSingleClass(String id, Map classData) async { /* ... no change ... */ }
  Future<void> _syncPayments() async { /* ... no change ... */ }
  Future<void> _syncSinglePayment(String id, Map paymentData) async { /* ... no change ... */ }
  Future<void> loadDataFromFirebase() async { /* ... no change ... */ }
  Future<void> backupLocalDataToFirebase() async { /* ... no change ... */ }
}